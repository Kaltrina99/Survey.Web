@inject Survey.Infrastructure.Data.ApplicationDbContext db
@model IEnumerable<Survey.Core.Models.ProjectCategory>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Survey.Core.Constants
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int countUser(int id)
    {
        return db.UserProjectCategories.Where(x => x.CategoryId == id).ToList().Count;
    }
    var id = ViewData["Id"];
}


<div class="content d-flex flex-column flex-column-fluid" id="kt_content">

    <!--begin::Entry-->
    <div class="d-flex flex-column-fluid">
        <!--begin::Container-->
        <div class="container">

            <!--begin::Card-->
            <div class="card card-custom">
                <div style="box-shadow: 0 0 30px 0 #523f690d;" class="card-header flex-wrap border-0 pt-6 pb-0">
                    <div class="card-title">
                        <h3 class="">
                            Category
                        </h3>
                    </div>
                        <div class="card-toolbar">
                            <!--begin::Button-->
                             @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Add)).Result.Succeeded)
                            {
                            <a asp-controller="ProjectCategory" asp-action="CreateProjectCategory" asp-route-id="@id" type="button" class="btn btn-success btn-rounded" data-mdb-ripple-color="dark">
                                <i class="fa fa-plus"></i> New category
                            </a>
                            }
                            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_View)).Result.Succeeded)
                            {
                            <!--end::Button-->
                            <a asp-controller="ProjectCategory" asp-action="Sub" class="btn btn-info" title="Tree">
                                <i class="flaticon2-trash"></i>Tree Structure
                            </a>
                             }
                        </div>
                    
                </div>
                <div class="card-body">
                    <!--begin: Search Form-->
                    <!--begin::Search Form-->
                    <div class="mb-7">
                        <div class="row align-items-center">
                            <div class="col-lg-6 col-xl-6">
                                <div class="row align-items-center">
                                    <div class="col-md-6 my-2 my-md-0">
                                        <div class="input-icon">
                                            <input type="text" onkeyup="myFunction()" class="form-control" placeholder="Search..." id="kt_datatable_search_query" />
                                            <span>
                                                <i class="flaticon2-search-1 text-muted"></i>
                                            </span>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-6 col-xl-6 mt-5 mt-lg-0">
                            </div>
                        </div>
                    </div>
                    <!--end::Search Form-->
                    <!--end: Search Form-->
                    <!--begin: Datatable-->
                    <table class="table" id="kt_datatable">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Title</th>
                                <th>Number of users enrolled</th>
                                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Delete)).Result.Succeeded ||
                                (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_AssignUser)).Result.Succeeded ||
                                (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Update)).Result.Succeeded)
                                {
                                    <th>Actions</th>
                                }
                            </tr>
                        </thead>

                        <tbody id="kot">
                            @foreach (var item in Model)
                            {<tr>
                                    <td id="kot">@item.Id</td>
                                    <td>   @Html.DisplayFor(modelItem => item.Name)</td>
                                    <td>@countUser(@item.Id)</td>
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Delete)).Result.Succeeded || (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_AssignUser)).Result.Succeeded || (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Update)).Result.Succeeded)
                                    {
                                        <td class="align-self-end">
                                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_View)).Result.Succeeded)
                                                    {
                                                    <a asp-controller="ProjectCategory" asp-action="Index" asp-route-id="@item.Id" class="btn btn-info" title="SubCategory">
                                                                <i class="flaticon2-trash"></i>SubCategory
                                                            </a>
                                                    }
                                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_AssignUser)).Result.Succeeded)
                                                    {
                                                            <a class="btn btn-primary" title="Enroll" asp-action="Enroll" asp-route-id="@item.Id">Enroll</a>
                                                    }
                                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Update)).Result.Succeeded)
                                                    {
                                                            <a asp-controller="ProjectCategory" asp-action="UpdateCategory" asp-route-id="@item.Id" class="btn btn-warning" title="Update">
                                                                <i class="flaticon-edit"></i>Update
                                                            </a>
                                                    }
                                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.Category_Delete)).Result.Succeeded)
                                                    {
                                                    <a asp-controller="ProjectCategory" asp-action="DeleteCategory" asp-route-id="@item.Id" class="btn btn-danger" title="Delete">
                                                                <i class="flaticon2-trash"></i>Delete
                                                            </a>
                                                    }
                                        </td>
                                 
                                    }
                                </tr>
                               
                            }
                            
                        </tbody>
                    </table>
                    <!--end: Datatable-->
                </div>
            </div>
            <!--end::Card-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Entry-->
</div>
<!--end::Content-->


<style>
    th span {
        color: #b5b5c3 !important;
        font-size: .9rem;
        text-transform: uppercase;
        font-weight: 600 !important;
        letter-spacing: .1rem;
    }

    th:last-child span {
        text-align: right;
    }

    [data-field="ID"] span, [data-field="ID"] th {
        width: 34px !important;
    }

    .card.card-custom {
        box-shadow: 0px 0px 30px 0px rgb(82 63 105 / 18%);
        border: 0;
    }

    tbody tr:hover {
        background-color: #F3F6F9;
    }

    .datatable-row {
        border-bottom: 1px solid #EBEDF3;
    }

    @@media only screen and (min-width: 1024px) {
        [data-field="Actions"] span {
            float: right;
            padding-right: 32px;
        }
    }


    th:last-child span {
        float: right;
        padding-right: 40px;
    }

    .datatable-row > .datatable-cell:first-child {
        padding-left: 10px !important;
    }

    .form-control:focus {
        border-color: #ED7D31 !important;
    }

    @@media only screen and (max-width: 500px) {
        table {
            width: 100%;
            overflow-x: auto !important;
        }
    }
</style>

<script>
    function myFunction() {
        var input, filter, table, tr, td, i;
        input = document.getElementById("kt_datatable_search_query");
        filter = input.value.toUpperCase();
        table = document.getElementById("kt_datatable");
        tr = table.getElementsByTagName("tr");
        console.log(table.getElementsByTagName("tr"))
        for (var i = 0; i < tr.length; i++) {
            var tds = tr[i].getElementsByTagName("td");
            var flag = false;
            for (var j = 0; j < tds.length; j++) {
                var td = tds[j];
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    flag = true;
                }
            }
            if (flag) {
                tr[i].style.display = "";
            }
            else {
                tr[i].style.display = "none";
            }
        }
    }



</script>