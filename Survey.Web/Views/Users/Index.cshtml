@using Microsoft.AspNetCore.Identity;
@model IEnumerable<IdentityUser>
@inject Survey.Infrastructure.Data.ApplicationDbContext _dbContext
@using Survey.Core.Models
@using X.PagedList
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Survey.Core.Constants
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var U = User.Identity.Name;
    var list = _dbContext.Users.ToList().Count();
}

<div class="container">



    <h1>User List</h1>
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_AddUser)).Result.Succeeded)
    {
        <div class="pt-10 pb-10">
            <a asp-action="Create" type="button" class="btn btn-success btn-rounded" data-mdb-ripple-color="dark" style="cursor:pointer">
                <i class="fa fa-plus"></i>  Add new user
            </a>
            <a asp-action="ImportUsers" type="button" class="btn btn-primary btn-rounded" data-mdb-ripple-color="dark">
                <i class="fa fa-file-import"></i>Import New Users
            </a>
        </div>
    }
   <div class="pt-10 pb-10">
        <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." class="form-control" title="Type in a name">
        </div>
    <table class="table table-striped  table-hover paginated-table mb-15" id="userTable">
        <thead>
            <tr>
                <th>
                    UserName
                </th>
                <th>
                    Id
                </th>
                <th>
                    Email
                </th>
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded ||
                (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_DeleteUser)).Result.Succeeded ||
                (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded)
                {
                    <th style="width:10%">
                        Actions
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>
                        <div>
                            <a>
                                @user.UserName
                            </a>
                        </div>
                    </td>
                    <td>
                        <a>
                            @user.Id
                        </a>
                    </td>

                    <td>
                        <a>
                            @user.Email
                        </a>
                    </td>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded ||
                   (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_DeleteUser)).Result.Succeeded ||
                   (AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded)
                    {
                        <td>
                            <div >

                                <button type="button" class="btn btn-light-orange dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Action
                                </button>
                                <div class="dropdown-menu">
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded)
                                    {
                                        <a class="dropdown-item" asp-controller="UserRoles" asp-action="Index" asp-route-userId="@user.Id">Manage Roles</a>
                                    }
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_UpdateUser)).Result.Succeeded)
                                    {
                                        <a class="dropdown-item" asp-action="Update" asp-route-Id="@user.Id" method="post">Update</a>
                                    }
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.PremissionList.User_DeleteUser)).Result.Succeeded)
                                    {
                                        <a class="dropdown-item" style="background-color:red; color:white;" asp-action="Delete" asp-route-Id="@user.Id" method="post">Delete</a>
                                    }
                                  
                                </div>
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    @*      <form asp-action="Index" id="form1">
    <partial name="~/Views/Shared/_Paging.cshtml" model='(Model.Forms as IPagedList,$"/users/Index");' data-="" />
    </form>*@
    

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    @*<script>
    $(document).ready(function () {
    $('#userTable').dataTable({

    });
    });
    </script>*@
</div>
<script>

    function myFunction() {
        var input, filter, table, tr, td, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("userTable");
        tr = table.getElementsByTagName("tr");
        for (var i = 0; i < tr.length; i++) {
            var tds = tr[i].getElementsByTagName("td");
            var flag = false;
            for (var j = 0; j < tds.length; j++) {
                var td = tds[j];
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    flag = true;
                }
            }
            if (flag) {
                tr[i].style.display = "";
            }
            else {
                tr[i].style.display = "none";
            }
        }
    }



</script>

<style>
    .table td {
        padding: 0.75rem;
        vertical-align: middle;
    }
</style>